name: Rust

on:
  push:
    branches: [ "main", "pipeline/create-release-pipeline" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
    - uses: actions/checkout@v3

    - name: Set up cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/registry/
          backend/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-

    - name: Build
      working-directory: backend
      run: cargo build --release

    - name: Test
      working-directory: backend
      run: cargo test

    - name: Get host information
      run: >
        echo "HOST_SUFFIX=$(rustc -vV | grep 'host:' | awk -F 'host: ' '{print $2}')" >> $GITHUB_ENV

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
          name: rest-wake-${{env.HOST_SUFFIX}}
          path: |
            backend/target/release/rest-wake
            backend/target/release/rest-wake.exe
